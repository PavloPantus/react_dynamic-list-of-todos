{"version":3,"sources":["api/todos.js","api/users.js","TodoItem.js","TodoList.js","App.js","index.js"],"names":["todos","dataPromise","data","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","json","abrupt","stop","users","TodoItem","_ref","todo","react_default","createElement","className","user","name","email","title","completed","TodoList","arrayOfTodos","setArrayOfTodos","Fragment","onClick","Object","toConsumableArray","sort","todo1","todo2","localeCompare","type","filter","concat","map","src_TodoItem","key","id","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","loading","setLoading","_useState5","_useState6","loaded","setLoadStatus","then","todosFromServer","myUsers","todosWithUsersFromServer","objectSpread2","find","userId","disabled","src_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bb7ecfec.chunk.js","sourcesContent":["const todos = async() => {\n  // eslint-disable-next-line\n  const dataPromise = await fetch('https://jsonplaceholder.typicode.com/todos');\n  const data = await dataPromise.json();\n\n  return data;\n};\n\nexport default todos;\n","const users = async() => {\n  const dataPromise = await fetch('https://jsonplaceholder.typicode.com/users');\n  const data = await dataPromise.json();\n\n  return data;\n};\n\nexport default users;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo }) => (\n  <div className=\"todo-item\">\n    <h1>{todo.user.name}</h1>\n    <p>\nEmail -\n      {todo.user.email}\n    </p>\n    <h2>{todo.title}</h2>\n    <p className={todo.completed ? 'completed' : 'not-completed'}>\n      {!todo.completed && 'not'}\n      {' '}\ncompleted\n    </p>\n  </div>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape(\n    {\n      userId: PropTypes.string,\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n      user: PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n        username: PropTypes.string,\n        email: PropTypes.string,\n        address: PropTypes.shape({\n          street: PropTypes.string,\n          suite: PropTypes.string,\n          city: PropTypes.string,\n          zipcode: PropTypes.string,\n          geo: PropTypes.shape({\n            lat: PropTypes.string,\n            lng: PropTypes.string,\n          }),\n        }),\n      }),\n    }\n  ).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ arrayOfTodos, setArrayOfTodos }) => {\n  const sortByTitle = todos => [...todos]\n    .sort((todo1, todo2) => todo1.title.localeCompare(todo2.title));\n\n  const sortByUserName = todos => [...todos]\n    .sort((todo1, todo2) => todo1.user.name.localeCompare(todo2.user.name));\n\n  const sortByStatus = todos => [...todos]\n    .filter(todo => todo.completed)\n    .concat(todos.filter(todo => !todo.completed));\n\n  return (\n    <>\n\n      <button\n        onClick={() => {\n          setArrayOfTodos(sortByTitle(arrayOfTodos));\n        }}\n        className=\"button_sort\"\n        type=\"button\"\n      >\n         sort by title\n      </button>\n\n      <button\n        onClick={() => {\n          setArrayOfTodos(sortByUserName(arrayOfTodos));\n        }}\n        className=\"button_sort\"\n        type=\"button\"\n      >\n        sort by user name\n      </button>\n\n      <button\n        onClick={() => {\n          setArrayOfTodos(sortByStatus(arrayOfTodos));\n        }}\n        className=\"button_sort\"\n        type=\"button\"\n      >\n        sort by status\n      </button>\n\n      <div className=\"todo-list\">\n        {\n          arrayOfTodos.map(\n            todo => <TodoItem key={todo.id} todo={todo} />\n          )\n        }\n      </div>\n    </>\n  );\n};\n\nTodoList.propTypes = {\n  arrayOfTodos: PropTypes.arrayOf(\n    PropTypes.shape({\n\n      userId: PropTypes.string,\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n      user: PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n        username: PropTypes.string,\n        email: PropTypes.string,\n        address: PropTypes.shape({\n          street: PropTypes.string,\n          suite: PropTypes.string,\n          city: PropTypes.string,\n          zipcode: PropTypes.string,\n          geo: PropTypes.shape({\n            lat: PropTypes.string,\n            lng: PropTypes.string,\n          }),\n        }),\n      }),\n\n    }),\n  ).isRequired,\n  setArrayOfTodos: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todos from './api/todos';\nimport users from './api/users';\n\nimport TodoList from './TodoList';\n\nfunction App() {\n  const [arrayOfTodos, setArrayOfTodos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loaded, setLoadStatus] = useState(false);\n\n  const loadTodosWithUsers = () => {\n    setLoading(true);\n\n    todos()\n      .then(\n        (todosFromServer) => {\n          users().then(\n            (myUsers) => {\n              const todosWithUsersFromServer = todosFromServer.map(\n                todo => ({\n                  ...todo,\n                  user: myUsers.find(user => user.id === todo.userId),\n                })\n              );\n\n              setArrayOfTodos(todosWithUsersFromServer);\n              setLoading(false);\n              setLoadStatus(true);\n            }\n          );\n        }\n      );\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n\n      {!loaded\n      && (\n        <button\n          className={loading ? 'button__loading' : 'button__load'}\n          type=\"button\"\n          onClick={loadTodosWithUsers}\n          disabled={loading}\n        >\n          {loading ? 'Loading...' : 'Load'}\n        </button>\n      )\n      }\n      {\n        loaded\n        && (\n          <TodoList\n            setArrayOfTodos={setArrayOfTodos}\n            arrayOfTodos={arrayOfTodos}\n          />\n        )\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}