{"version":3,"sources":["api/todos.js","api/users.js","TodoItem.js","TodoList.js","api/GetDataFromApi.js","App.js","index.js"],"names":["todosURL","usersURL","TodoItem","_ref","todo","react_default","a","createElement","className","user","name","email","title","completed","TodoList","arrayOfTodos","setArrayOfTodos","setActiveFilter","activeFilter","Fragment","onClick","todos","sorted","Object","toConsumableArray","sort","todo1","todo2","localeCompare","reverse","sortByTitle","type","sortByUserName","b","sortByStatus","map","src_TodoItem","key","id","GetDataFromApi","url","dataPromise","regenerator_default","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","loading","setLoading","_useState5","_useState6","loaded","setLoadStatus","_useState7","_useState8","_ref2","arrayOfTodosFromServer","arrayOfUsers","todosWithUsersFromServer","Promise","all","objectSpread2","find","userId","disabled","src_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8f38c870.chunk.js","sourcesContent":["const todosURL = 'https://jsonplaceholder.typicode.com/todos';\n\nexport default todosURL;\n","const usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nexport default usersURL;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo }) => (\n  <div className=\"todo-item\">\n    <h1>{todo.user.name}</h1>\n    <p>\nEmail -\n      {todo.user.email}\n    </p>\n    <h2>{todo.title}</h2>\n    <p className={todo.completed ? 'completed' : 'not-completed'}>\n      {!todo.completed && 'not'}\n      {' '}\ncompleted\n    </p>\n  </div>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape(\n    {\n      userId: PropTypes.number,\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n      user: PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n        username: PropTypes.string,\n        email: PropTypes.string,\n        address: PropTypes.shape({\n          street: PropTypes.string,\n          suite: PropTypes.string,\n          city: PropTypes.string,\n          zipcode: PropTypes.string,\n          geo: PropTypes.shape({\n            lat: PropTypes.string,\n            lng: PropTypes.string,\n          }),\n        }),\n      }),\n    }\n  ).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = (\n  { arrayOfTodos,\n    setArrayOfTodos,\n    setActiveFilter,\n    activeFilter }\n) => {\n  const sortByTitle = (todos) => {\n    const sorted = [...todos]\n      .sort((todo1, todo2) => (\n        todo1.title.localeCompare(todo2.title)\n      ));\n\n    if (activeFilter !== 'sortByTitle') {\n      setActiveFilter('sortByTitle');\n\n      return sorted;\n    }\n    setActiveFilter(' ');\n\n    return sorted.reverse();\n  };\n\n  const sortByUserName = (todos) => {\n    const sorted = [...todos]\n      .sort((todo1, todo2) => todo1.user.name.localeCompare(todo2.user.name));\n\n    if (activeFilter === 'sortByUserName') {\n      setActiveFilter('');\n\n      return sorted;\n    }\n    setActiveFilter('sortByUserName');\n\n    return sorted.reverse();\n  };\n\n  const sortByStatus = (todos) => {\n    const sorted = [...todos]\n      .sort((a, b) => a.completed - b.completed);\n      /* .filter(todo => todo.completed)\n      .concat(todos.filter(todo => !todo.completed)); */\n\n    if (activeFilter === 'sortByStatus') {\n      setActiveFilter('');\n\n      return sorted;\n    }\n    setActiveFilter('sortByStatus');\n\n    return sorted.reverse();\n  };\n\n  return (\n    <>\n\n      <button\n        onClick={() => {\n          setArrayOfTodos(sortByTitle(arrayOfTodos));\n        }}\n        className=\"button_sort\"\n        type=\"button\"\n      >\n         sort by title\n      </button>\n\n      <button\n        onClick={() => {\n          setArrayOfTodos(sortByUserName(arrayOfTodos));\n        }}\n        className=\"button_sort\"\n        type=\"button\"\n      >\n        sort by user name\n      </button>\n\n      <button\n        onClick={() => {\n          setArrayOfTodos(sortByStatus(arrayOfTodos));\n        }}\n        className=\"button_sort\"\n        type=\"button\"\n      >\n        sort by status\n      </button>\n\n      <div className=\"todo-list\">\n        {\n          arrayOfTodos.map(\n            todo => <TodoItem key={todo.id} todo={todo} />\n          )\n        }\n      </div>\n    </>\n  );\n};\n\nTodoList.propTypes = {\n  arrayOfTodos: PropTypes.arrayOf(\n    PropTypes.shape({\n\n      userId: PropTypes.number,\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n      user: PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n        username: PropTypes.string,\n        email: PropTypes.string,\n        address: PropTypes.shape({\n          street: PropTypes.string,\n          suite: PropTypes.string,\n          city: PropTypes.string,\n          zipcode: PropTypes.string,\n          geo: PropTypes.shape({\n            lat: PropTypes.string,\n            lng: PropTypes.string,\n          }),\n        }),\n      }),\n\n    }),\n  ).isRequired,\n  setArrayOfTodos: PropTypes.func.isRequired,\n  setActiveFilter: PropTypes.func.isRequired,\n  activeFilter: PropTypes.string.isRequired,\n};\n\nexport default TodoList;\n","const GetDataFromApi = async(url) => {\n  const dataPromise = await fetch(url);\n\n  return dataPromise.json();\n};\n\nexport default GetDataFromApi;\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosURL from './api/todos';\nimport usersURL from './api/users';\n\nimport TodoList from './TodoList';\nimport GetDataFromApi from './api/GetDataFromApi';\n\nfunction App() {\n  const [arrayOfTodos, setArrayOfTodos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loaded, setLoadStatus] = useState(false);\n  const [activeFilter, setActiveFilter] = useState(' ');\n\n  const loadTodosWithUsers = async() => {\n    setLoading(true);\n\n    const [arrayOfTodosFromServer, arrayOfUsers] = await Promise.all(\n      [GetDataFromApi(todosURL), GetDataFromApi(usersURL)]\n    );\n\n    const todosWithUsersFromServer = arrayOfTodosFromServer.map(\n      todo => ({\n        ...todo,\n        user: arrayOfUsers.find(\n          user => user.id === todo.userId\n        ),\n      })\n    );\n\n    setArrayOfTodos(todosWithUsersFromServer);\n    setLoading(false);\n    setLoadStatus(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n\n      {!loaded\n      && (\n        <button\n          className={loading ? 'button__loading' : 'button__load'}\n          type=\"button\"\n          onClick={loadTodosWithUsers}\n          disabled={loading}\n        >\n          {loading ? 'Loading...' : 'Load'}\n        </button>\n      )\n      }\n      {\n        loaded\n        && (\n          <TodoList\n            setArrayOfTodos={setArrayOfTodos}\n            arrayOfTodos={arrayOfTodos}\n            setActiveFilter={setActiveFilter}\n            activeFilter={activeFilter}\n          />\n        )\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}